#!/bin/bash

set -euo pipefail

opt_choose_file="Choose a sound file"
opt_play_rand="Play random sound"
opt_stop_player="Stop sound player"
opt_quit="Quit"

declare -a opts=(
  "$opt_choose_file"
  "$opt_play_rand"
  "$opt_stop_player"
  "$opt_quit"
)

soundDir=$HOME/.scripts/data/asounds
soundFiles=$(/bin/ls -1 "$soundDir" | grep ".mp3")

declare -a soundList=$soundFiles


choice=$(printf '%s\n' "${opts[@]}" | dmenu -i -l 7 -p 'Ambient sounds:' "${@}")

title="ambient-sound"

# If user chooses a sound file.
if [ "$choice" == "$opt_choose_file" ]; then
  # Piping the soundList array into dmenu.
  # We use "printf '%s\n'" to format the array one item to a line.
  choice=$(printf '%s\n' "${soundList[@]}" | sort | dmenu -i -l 20 -p 'Choose sound file:' "$@")
  mpv --title="$title" --loop "$soundDir/$choice" || exit

# If user chooses to play a random sound.
elif [ "$choice" == "$opt_play_rand" ]; then
  getRand=$(printf '%s\n' "${soundList[@]}" | shuf -n 1)
  mpv --title="$title" --loop "$soundDir/$getRand" || exit

# If user chooses to stop sound playing.
elif [ "$choice" == "$opt_stop_player" ]; then
  pkill -f "$title"

# What to do if we just escape without choosing anything.
else
  echo "Program terminated." && exit 0
fi

